// Generated by view binder compiler. Do not edit!
package com.app.smart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.smart.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton btnRegister;

  @NonNull
  public final CheckBox cbTerms;

  @NonNull
  public final TextInputEditText etConfirmPassword;

  @NonNull
  public final TextInputEditText etEmail;

  @NonNull
  public final TextInputEditText etFullName;

  @NonNull
  public final TextInputEditText etPassword;

  @NonNull
  public final LinearLayout layoutTerms;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilConfirmPassword;

  @NonNull
  public final TextInputLayout tilEmail;

  @NonNull
  public final TextInputLayout tilFullName;

  @NonNull
  public final TextInputLayout tilPassword;

  @NonNull
  public final TextView tvAppTitle;

  @NonNull
  public final TextView tvLogin;

  @NonNull
  public final TextView tvRegisterTitle;

  @NonNull
  public final TextView tvTermsLink;

  private ActivityRegisterBinding(@NonNull NestedScrollView rootView,
      @NonNull MaterialButton btnRegister, @NonNull CheckBox cbTerms,
      @NonNull TextInputEditText etConfirmPassword, @NonNull TextInputEditText etEmail,
      @NonNull TextInputEditText etFullName, @NonNull TextInputEditText etPassword,
      @NonNull LinearLayout layoutTerms, @NonNull ProgressBar progressBar,
      @NonNull TextInputLayout tilConfirmPassword, @NonNull TextInputLayout tilEmail,
      @NonNull TextInputLayout tilFullName, @NonNull TextInputLayout tilPassword,
      @NonNull TextView tvAppTitle, @NonNull TextView tvLogin, @NonNull TextView tvRegisterTitle,
      @NonNull TextView tvTermsLink) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.cbTerms = cbTerms;
    this.etConfirmPassword = etConfirmPassword;
    this.etEmail = etEmail;
    this.etFullName = etFullName;
    this.etPassword = etPassword;
    this.layoutTerms = layoutTerms;
    this.progressBar = progressBar;
    this.tilConfirmPassword = tilConfirmPassword;
    this.tilEmail = tilEmail;
    this.tilFullName = tilFullName;
    this.tilPassword = tilPassword;
    this.tvAppTitle = tvAppTitle;
    this.tvLogin = tvLogin;
    this.tvRegisterTitle = tvRegisterTitle;
    this.tvTermsLink = tvTermsLink;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_register;
      MaterialButton btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.cb_terms;
      CheckBox cbTerms = ViewBindings.findChildViewById(rootView, id);
      if (cbTerms == null) {
        break missingId;
      }

      id = R.id.et_confirm_password;
      TextInputEditText etConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPassword == null) {
        break missingId;
      }

      id = R.id.et_email;
      TextInputEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_full_name;
      TextInputEditText etFullName = ViewBindings.findChildViewById(rootView, id);
      if (etFullName == null) {
        break missingId;
      }

      id = R.id.et_password;
      TextInputEditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.layout_terms;
      LinearLayout layoutTerms = ViewBindings.findChildViewById(rootView, id);
      if (layoutTerms == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.til_confirm_password;
      TextInputLayout tilConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPassword == null) {
        break missingId;
      }

      id = R.id.til_email;
      TextInputLayout tilEmail = ViewBindings.findChildViewById(rootView, id);
      if (tilEmail == null) {
        break missingId;
      }

      id = R.id.til_full_name;
      TextInputLayout tilFullName = ViewBindings.findChildViewById(rootView, id);
      if (tilFullName == null) {
        break missingId;
      }

      id = R.id.til_password;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      id = R.id.tv_app_title;
      TextView tvAppTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAppTitle == null) {
        break missingId;
      }

      id = R.id.tv_login;
      TextView tvLogin = ViewBindings.findChildViewById(rootView, id);
      if (tvLogin == null) {
        break missingId;
      }

      id = R.id.tv_register_title;
      TextView tvRegisterTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvRegisterTitle == null) {
        break missingId;
      }

      id = R.id.tv_terms_link;
      TextView tvTermsLink = ViewBindings.findChildViewById(rootView, id);
      if (tvTermsLink == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((NestedScrollView) rootView, btnRegister, cbTerms,
          etConfirmPassword, etEmail, etFullName, etPassword, layoutTerms, progressBar,
          tilConfirmPassword, tilEmail, tilFullName, tilPassword, tvAppTitle, tvLogin,
          tvRegisterTitle, tvTermsLink);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
