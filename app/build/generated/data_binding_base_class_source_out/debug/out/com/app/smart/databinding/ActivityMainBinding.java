// Generated by view binder compiler. Do not edit!
package com.app.smart.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.smart.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnManageContacts;

  @NonNull
  public final MaterialButton btnShareLocation;

  @NonNull
  public final MaterialCardView cardAlertHistory;

  @NonNull
  public final MaterialCardView cardEmergencyContacts;

  @NonNull
  public final FloatingActionButton fabSettings;

  @NonNull
  public final RecyclerView rvAlertHistory;

  @NonNull
  public final SwitchMaterial switchMonitoring;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvCurrentLocation;

  @NonNull
  public final TextView tvMonitoringStatus;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnManageContacts, @NonNull MaterialButton btnShareLocation,
      @NonNull MaterialCardView cardAlertHistory, @NonNull MaterialCardView cardEmergencyContacts,
      @NonNull FloatingActionButton fabSettings, @NonNull RecyclerView rvAlertHistory,
      @NonNull SwitchMaterial switchMonitoring, @NonNull Toolbar toolbar,
      @NonNull TextView tvCurrentLocation, @NonNull TextView tvMonitoringStatus) {
    this.rootView = rootView;
    this.btnManageContacts = btnManageContacts;
    this.btnShareLocation = btnShareLocation;
    this.cardAlertHistory = cardAlertHistory;
    this.cardEmergencyContacts = cardEmergencyContacts;
    this.fabSettings = fabSettings;
    this.rvAlertHistory = rvAlertHistory;
    this.switchMonitoring = switchMonitoring;
    this.toolbar = toolbar;
    this.tvCurrentLocation = tvCurrentLocation;
    this.tvMonitoringStatus = tvMonitoringStatus;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_manage_contacts;
      MaterialButton btnManageContacts = ViewBindings.findChildViewById(rootView, id);
      if (btnManageContacts == null) {
        break missingId;
      }

      id = R.id.btn_share_location;
      MaterialButton btnShareLocation = ViewBindings.findChildViewById(rootView, id);
      if (btnShareLocation == null) {
        break missingId;
      }

      id = R.id.card_alert_history;
      MaterialCardView cardAlertHistory = ViewBindings.findChildViewById(rootView, id);
      if (cardAlertHistory == null) {
        break missingId;
      }

      id = R.id.card_emergency_contacts;
      MaterialCardView cardEmergencyContacts = ViewBindings.findChildViewById(rootView, id);
      if (cardEmergencyContacts == null) {
        break missingId;
      }

      id = R.id.fab_settings;
      FloatingActionButton fabSettings = ViewBindings.findChildViewById(rootView, id);
      if (fabSettings == null) {
        break missingId;
      }

      id = R.id.rv_alert_history;
      RecyclerView rvAlertHistory = ViewBindings.findChildViewById(rootView, id);
      if (rvAlertHistory == null) {
        break missingId;
      }

      id = R.id.switch_monitoring;
      SwitchMaterial switchMonitoring = ViewBindings.findChildViewById(rootView, id);
      if (switchMonitoring == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_current_location;
      TextView tvCurrentLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvCurrentLocation == null) {
        break missingId;
      }

      id = R.id.tv_monitoring_status;
      TextView tvMonitoringStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvMonitoringStatus == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, btnManageContacts,
          btnShareLocation, cardAlertHistory, cardEmergencyContacts, fabSettings, rvAlertHistory,
          switchMonitoring, toolbar, tvCurrentLocation, tvMonitoringStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
